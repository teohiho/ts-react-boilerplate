
$font-size:    30px;
$default-color: gray;
$font-color: darken($default-color, 60%);
$light-color: lighten($default-color, 45%);
$dark-color: darken($default-color, 20%);

.main-display {
	background-color: red;
	.main-h1{
		font-size: $font-size * 2;
	}
}

:local(.iAmOnlyOne) {
	color: blue;
}

.title {
	font-family:'tahoma';
	color: blue;
    &.sub-title {
      font-size:smaller;
      color:red;
   }
}

@mixin abc($color:red, $padding: 5px 10px){
    padding: $padding;
    background:$color;
}
.mixin{
	@include abc($light-color);
	.button{
		background-color: $default-color;
		&:hover{
			background-color: $light-color;
		} 
	}
}
//sss
$colors: yellow, blue;
@each $color in $colors {
	.abc{
		color: $color;
	}
	$i:  $color;
	$stt: index($colors , $color );
    .input-#{$stt}{
		background-color: $i;
	}
}

.button2 {
	border: none;
	text-transform: uppercase;
	text-align: center;
	background-color: blue; 
}
.text1{
	color: blue;
}
//sss
   
.login-button {
	@extend .button2, .text1;
	background-color: red; 
}

@function function-size($arg1, $arg2) {
	@return $arg1 + $arg2;
}

.testFunction {
	font-size: function-size(50px, 10px);
}

//----------- TEST FUNCTION
$translucent-color: rgba(silver, 0.5);
@function background($color: $translucent-color, $img:null, $xtra-values...){
	$url: if($img,url("~img/#{$img}.jpg"), null);
	
	@return $color $url $xtra-values;
}

.sidebar {
	// background: background(rgba(silver, 0.5),null, center fixed);
	background: background(rgba(silver, 0.5),sidebar-1, center fixed );
	height: 200px;
}
